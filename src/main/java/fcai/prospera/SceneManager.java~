package fcai.prospera;

import fcai.prospera.controller.AuthController;
import fcai.prospera.controller.DashboardController;
import fcai.prospera.controller.ZakatAndComplianceController;
import fcai.prospera.repository.AssetRepository;
import fcai.prospera.service.AssetService;
import fcai.prospera.service.AuthService;
import fcai.prospera.service.ReportGenerationService;
import fcai.prospera.service.ZakatAndComplianceService;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.stage.Stage;

import java.io.IOException;
import java.util.function.Consumer;

public class SceneManager {
    private final Stage stage;

    // services
    private final AuthService authService;
    private final AssetService assetService;
    private final ReportGenerationService reportService;
    private final ZakatAndComplianceService zakatService;

    public SceneManager(Stage stage, AuthService authService, AssetService assetService, ReportGenerationService reportService, ZakatAndComplianceService zakatService) {
        this.stage = stage;
        this.authService = authService;
        this.assetService = assetService;
        this.reportService = reportService;
        this.zakatService = zakatService;
    }

    private void switchScene(String fxmlPath, Consumer<Object> controllerInjector) throws IOException {
        FXMLLoader loader = new FXMLLoader(getClass().getResource(fxmlPath));
        Parent root = loader.load();
        Object controller = loader.getController();
        controllerInjector.accept(controller);
        if (stage.getScene() == null) {
            stage.setScene(new Scene(root));
        } else {
            stage.getScene().setRoot(root);
        }
    }

    public void showAuthView() throws IOException {
        switchScene("auth.fxml", controller -> {
            ((AuthController) controller).init(this, authService);
        });
    }

    public void showLoginView() throws IOException {
        switchScene("auth-login.fxml", controller -> {
            ((AuthController) controller).init(this, authService);
        });
    }

    public void showSignupview() throws IOException {
        switchScene("auth-signup.fxml", controller -> {
            ((AuthController) controller).init(this, authService);
        });
    }

    public void showDashboardView() throws IOException {
        switchScene("dashboard.fxml", controller -> {
            ((DashboardController) controller).init(this, authService);
        });
    }

    public void showZakatView() throws IOException {
        switchScene("zakat.fxml", controller -> {
            ((ZakatAndComplianceController) controller).init(this, authService, zakatService, false);
        });
    }

    public void showZakatChooseAssetsView() throws IOException {
        switchScene("zakat.fxml", controller -> {
            ((ZakatAndComplianceController) controller).init(this, authService, zakatService, false);
        });
    }
}
